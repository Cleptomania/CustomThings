buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies { classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT' }
}

apply plugin: 'forge'
apply plugin: 'maven-publish'
apply plugin: 'curseforge'

group = 'tterrag.customthings'
archivesBaseName = "CustomThings"
version = "MC${minecraft_version}-${mod_version}-${System.getenv().BUILD_NUMBER}"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = 'run'
	
	replace "@VERSION@", project.version
    replace "${toReplace}", "required-after:endercore@[${endercore_version},)"
    replaceIn "CustomThings.java"
}

repositories {
    maven {
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
    maven { // CCC/NEI (for WAILA)
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
}

dependencies {
	compile "com.enderio.core:EnderCore:${endercore_version}:dev"
    compile "org.projectlombok:lombok:1.16.4"
    compile "tterrag.difficultyrecipes:DifficultyRecipes:${dc_version}:deobf"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.57:dev"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn sourceJar, javadocJar, deobfJar

curse {
    dependsOn 'reobf'
    
    onlyIf {
        return project.hasProperty('curseforge_key') && System.getenv("CURSE") != null && System.getenv("CURSE").equalsIgnoreCase("true")
    }

    if (project.hasProperty('curseforge_key')) apiKey = project.curseforge_key
    projectId = project.curse_projectId
    changelog = System.getenv("CHANGELOG").equals("none") ? project.changelog : System.getenv("CHANGELOG")
    releaseType = project.hasProperty('release_type') ? "${release_type}".toString() : 'release'
    additionalArtifact deobfJar
    relatedProject 'endercore'
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact javadocJar
            artifact deobfJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        }
    }
}
